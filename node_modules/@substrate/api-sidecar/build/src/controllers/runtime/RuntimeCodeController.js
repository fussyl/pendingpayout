"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const services_1 = require("../../services");
const AbstractController_1 = require("../AbstractController");
/**
 * Get the Wasm code blob of the Substrate runtime.
 *
 * Query:
 * - (Optional)`at`: Block at which to retrieve runtime version information at. Block
 * 		identifier, as the block height or block hash. Defaults to most recent block.
 *
 * Returns:
 * - `at`: Block number and hash at which the call was made.
 * - `code`: Runtime code Wasm blob.
 */
class RuntimeCodeController extends AbstractController_1.default {
    constructor(api) {
        super(api, '/runtime/code', new services_1.RuntimeCodeService(api));
        /**
         * Get the chain's latest metadata in a decoded, JSON format.
         *
         * @param _req Express Request
         * @param res Express Response
         */
        this.getCodeAtBlock = async ({ query: { at } }, res) => {
            const hash = await this.getHashFromAt(at);
            RuntimeCodeController.sanitizedSend(res, await this.service.fetchCode(hash));
        };
        this.initRoutes();
    }
    initRoutes() {
        this.safeMountAsyncGetHandlers([['', this.getCodeAtBlock]]);
    }
}
exports.default = RuntimeCodeController;
//# sourceMappingURL=RuntimeCodeController.js.map